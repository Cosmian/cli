---
name: CI checks

on:
  workflow_call:
    inputs:
      toolchain:
        required: true
        type: string
      debug_or_release:
        required: true
        type: string
      platforms:
        required: true
        type: string

jobs:
  cargo-lint:
    uses: Cosmian/reusable_workflows/.github/workflows/clippy.yml@develop
    with:
      toolchain: ${{ inputs.toolchain }}

  cargo-deny:
    uses: Cosmian/reusable_workflows/.github/workflows/cargo-audit.yml@develop
    name: Security Audit
    with:
      toolchain: ${{ inputs.toolchain }}

  cargo-machete:
    uses: Cosmian/reusable_workflows/.github/workflows/cargo-machete.yml@develop
    with:
      toolchain: ${{ inputs.toolchain }}

  cargo-publish:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Publishing - dry run
        run: |
          cargo +nightly publish --dry-run --workspace -Z package-workspace \
            --exclude cosmian_findex_cli \
            --exclude cosmian_findex_client \
            --exclude cosmian_findex_structs \
            --exclude cosmian_findex_server \
            --exclude test_findex_server \
            --exclude cosmian_kms_access \
            --exclude cosmian_kms_cli \
            --exclude cosmian_kms_client_utils \
            --exclude cosmian_kms_crypto \
            --exclude cosmian_kms_base_hsm \
            --exclude cosmian_kms_proteccio \
            --exclude cosmian_kms_utimaco \
            --exclude cosmian_kms_softhsm2 \
            --exclude cosmian_kms_interfaces \
            --exclude cosmian_kms_kmip \
            --exclude cosmian_kms_kmip-derive \
            --exclude cosmian_kms_client \
            --exclude cosmian_kms_server \
            --exclude test_kms_server \
            --exclude cosmian_kms_server_database

      - name: Publishing
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          cargo +nightly publish --workspace -Z package-workspace --token ${{ secrets.CRATES_IO }} \
            --exclude cosmian_findex_cli \
            --exclude cosmian_findex_client \
            --exclude cosmian_findex_structs \
            --exclude cosmian_findex_server \
            --exclude test_findex_server \
            --exclude cosmian_kms_access \
            --exclude cosmian_kms_cli \
            --exclude cosmian_kms_client_utils \
            --exclude cosmian_kms_crypto \
            --exclude cosmian_kms_base_hsm \
            --exclude cosmian_kms_proteccio \
            --exclude cosmian_kms_utimaco \
            --exclude cosmian_kms_softhsm2 \
            --exclude cosmian_kms_interfaces \
            --exclude cosmian_kms_kmip \
            --exclude cosmian_kms_kmip-derive \
            --exclude cosmian_kms_client \
            --exclude cosmian_kms_server \
            --exclude test_kms_server \
            --exclude cosmian_kms_server_database

  build: # Build on Ubuntu 22/24, Rocky 8/9, MacOS 13/15 and Windows 22
    uses: Cosmian/reusable_workflows/.github/workflows/build_all.yml@develop
    secrets: inherit
    with:
      toolchain: ${{ inputs.toolchain }}
      debug_or_release: ${{ inputs.debug_or_release }}

  docker-image:
    name: Build docker image
    uses: Cosmian/reusable_workflows/.github/workflows/build_docker_image.yml@develop
    with:
      prefix: ''
      registry-image: ghcr.io/cosmian/cli
      platforms: ${{ inputs.platforms }}
      fips: false

  ##############################################################################
  ### Releases
  ##############################################################################
  release:
    name: release
    needs:
      - cargo-deny
      - cargo-lint
      - build
    uses: Cosmian/reusable_workflows/.github/workflows/push-artifacts.yml@develop
    with:
      project-name: cli
      destination: cli # /mnt/packages/cli
      debug_or_release: ${{ inputs.debug_or_release }}

  public_documentation:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Deploy documentation in staging
        if: ${{ github.ref_name == 'develop' }}
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: staging.yml
          repo: Cosmian/public_documentation
          ref: develop
          token: ${{ secrets.PAT_TOKEN }}

      - name: Deploy documentation in prod
        if: startsWith(github.ref, 'refs/tags')
        uses: benc-uk/workflow-dispatch@v1
        with:
          workflow: prod.yml
          repo: Cosmian/public_documentation
          ref: main
          token: ${{ secrets.PAT_TOKEN }}
